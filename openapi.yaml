openapi: 3.0.0
info:
  title: Cars API
  version: "1.0.0"

servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /healthcheck:
    get:
      summary: Healthcheck
      description: Healthcheck
      operationId: healthcheck
      tags:
        - "Kubernetes Probe"
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
  /readiness:
    get:
      summary: Readiness
      description: Readiness
      operationId: readiness
      tags:
        - "Kubernetes Probe"
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
        "500":
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "NOT OK"
  /cars:
    get:
      summary: Get all cars
      description: Get all cars
      operationId: getAllCars
      tags:
        - "Cars"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Car"
    post:
      summary: Create a car
      description: Create a car
      operationId: createCar
      tags:
        - "Cars"
      requestBody:
        description: Car object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Car"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Car"
        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Bad Request"
        "500":
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Internal Server Error"
  /cars/{id}:
    get:
      summary: Get a car by id
      description: Get a car by id
      operationId: getCarById
      tags:
        - "Cars"
      parameters:
        - name: id
          in: path
          description: Car id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Car"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Internal Server Error"
    put:
      summary: Update a car by id
      description: Update a car by id
      operationId: updateCarById
      tags:
        - "Cars"
      parameters:
        - name: id
          in: path
          description: Car id
          required: true
          schema:
            type: string
      requestBody:
        description: Car object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Car"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Car"
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Internal Server Error"

components:
  schemas:
    Car:
      type: object
      required:
        - id
        - make
        - model
        - category
        - year
        - color
        - price
        - mileage
        - package
      properties:
        id:
          type: string
          example: "1"
        make:
          type: string
          example: "Ford"
        model:
          type: string
          example: "Mustang"
        year:
          type: integer
          example: 1964
        category:
          type: string
          example: "Muscle"
        color:
          type: string
          example: "Red"
        price:
          type: integer
          example: 100000
        mileage:
          type: integer
          example: 10000
        package:
          type: string
          example: "Premium"